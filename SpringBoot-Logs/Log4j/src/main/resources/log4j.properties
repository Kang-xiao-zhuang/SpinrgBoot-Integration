##指定日志的输出级别与输出端
log4j.rootLogger=DEBUG,CONSOLE,logDB
#自定义logger对象设置
log4j.logger.com.zhuang=info
log4j.logger.org.apache=error
log4j.appender.CONSOLE=org.apache.log4j.ConsoleAppender
#控制台打印的格式
log4j.appender.CONSOLE.layout=org.apache.log4j.PatternLayout
#log4j.appender.CONSOLE.layout=org.apache.log4j.xml.XMLLayout
#log4j.appender.CONSOLE.layout=org.apache.log4j.HTMLLayout
#log4j.appender.CONSOLE.layout=org.apache.log4j.SimpleLayout
log4j.appender.CONSOLE.layout.ConversionPattern=%-d{yyyy-MM-dd HH:mm:ss.SSS} [%t:%r] -[%p] %m%n
##指定日志的文件编码
log4j.appender.CONSOLE.encoding=UTF-8
# 日志文件输出的appender对象
log4j.appender.file=org.apache.log4j.FileAppender
# 指定消息格式
log4j.appender.file.layout=org.apache.log4j.PatternLayout
# 指定消息格式的内容
log4j.appender.file.layout.conversionPattern=%-d{yyyy-MM-dd HH:mm:ss.SSS} [%t:%r] -[%p] %m%n
# 指定文件保存路径
log4j.appender.file.file=/logs/log4j.log
# 指定日志文件的字符集
log4j.appender.file.encoding=UTF-8
# 按照文件大小拆分的appender对象
# 日志文件输出的appender对象
log4j.appender.rollingFile=org.apache.log4j.RollingFileAppender
# 指定消息格式 layout
log4j.appender.rollingFile.layout=org.apache.log4j.PatternLayout
# 指定消息格式的内容
log4j.appender.rollingFile.layout.conversionPattern=%-d{yyyy-MM-dd HH:mm:ss.SSS} [%t:%r] -[%p] %m%n
# 指定文件保存路径
log4j.appender.rollingFile.file=/logs/log4j.log
# 指定日志文件的字符集
log4j.appender.rollingFile.encoding=UTF-8
# 指定日志文件内容的大小
log4j.appender.rollingFile.maxFileSize=1MB
# 指定日志文件的数量
log4j.appender.rollingFile.maxBackUpIndex=10
# 文件输出配置
log4j.appender.dailyFile=org.apache.log4j.DailyRollingFileAppender
#指定日志的输出路径
log4j.appender.dailyFile.layout=org.apache.log4j.PatternLayout
# 指定文件保存路径
log4j.appender.dailyFile.file=/logs/log4j.log
#指定日志的输出格式
log4j.appender.dailyFile.layout.ConversionPattern=%-d{yyyy-MM-dd HH:mm:ss} [%t:%r] -[%p] %m%n
#指定日志的文件编码
log4j.appender.dailyFile.encoding=UTF-8
# 指定日期拆分规则
log4j.appender.dailyFile.datePattern='.'yyyy-MM-dd-HH-mm-ss
#mysql
log4j.appender.logDB=org.apache.log4j.jdbc.JDBCAppender
log4j.appender.logDB.layout=org.apache.log4j.PatternLayout
log4j.appender.logDB.Driver=com.mysql.jdbc.Driver
log4j.appender.logDB.URL=jdbc:mysql://101.43.21.132:3310/test
log4j.appender.logDB.User=root
log4j.appender.logDB.Password=123456
log4j.appender.logDB.Sql=INSERT INTO log(project_name,create_date,level,category,file_name,thread_name,line,all_category,message) values('itcast','%d{yyyy-MM-ddHH:mm:ss}','%p','%c','%F','%t','%L','%l','%m')
#%m 输出代码中指定的日志信息
#%p 输出优先级，及 DEBUG、INFO 等
#%n 换行符（Windows平台的换行符为 "\n"，Unix 平台为 "\n"）
#%r 输出自应用启动到输出该 log 信息耗费的毫秒数
#%c 输出打印语句所属的类的全名
#%t 输出产生该日志的线程全名
#%d 输出服务器当前时间，默认为 ISO8601，也可以指定格式，如：%d{yyyy年MM月dd日
#HH:mm:ss}
#%l 输出日志时间发生的位置，包括类名、线程、及在代码中的行数。如：
#Test.main(Test.java:10)
#%F 输出日志消息产生时所在的文件名称
#%L 输出代码中的行号
#%% 输出一个 "%" 字符
